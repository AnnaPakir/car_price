# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HWWzec3eFu-WXHF327wTh7B1GPLVTkIn
"""

import streamlit as st

import re
import string
import pandas as pd
import pickle
import streamlit as st

year = ((string.ascii_uppercase.replace('I','').replace('O','').replace('Q','')\
          +string.digits.replace('0','').replace('Z','').replace('U',''))*2)[16:47]

def safety(line):
    if (line=='Ford') or (line=='Chrysler') or (line=='Honda') or (line
        =='Dodge') or (line=='Jeep') or (line=='Lincoln') or (line
        =='Mitsubishi'):
        return 4
    elif (line=='Chevrolet') or (line=='Toyota') or (line=='Hyundai') or (line
        =='Lexus') or (line=='GMC') or (line=='Cadillac') or (line
        =='Kia') or  (line=='Buick') or (line=='Pontiac'):
        return 7
    elif (line=='Volkswagen') or (line=='Audi'):
        return 6
    elif line=='Volvo':
        return 5
    elif (line=='Nissan') or (line=='BMW') or (line=='Mercedes') or (line
        =='Subaru') or (line=='Infiniti'):
        return 8

def engine(line):
    if (line=='Ford') or (line=='Chevrolet') or (line
        =='Chrysler') or (line=='Houndai') or (line=='Dodge')or (line
        =='GMC') or (line=='Mazda') or (line=='Jeep') or (line
        =='Cadillac') or (line=='Kia')or (line=='Lincoln') or (line
        =='Buick') or (line=='Mitsubishi') or (line=='Pontiac') or (line
        =='Land Rover'):
        return 8
    elif (line=='Honda') or (line=='Subaru') or (line=='Volvo'):
        return 6
    elif (line=='Toyota') or (line=='Volkswagen') or (line
        =='Lexus') or (line=='Audi') or (line=='Volvo'):
        return 5
    elif (line=='Nissan') or (line=='Infiniti'):
        return 4

def body(line):
    if (line=='Nissan') or (line=='Chrysler') or (line=='Honda') or (line
        =='Dodge') or (line=='Mazda') or (line=='Jeep') or (line
        =='Mitsubishi') or (line=='Infiniti') or (line=='Land Rover'):
        return 7
    elif (line=='Chevrolet') or (line=='GMC') or (line=='Buick') or (line
        =='Houndai') or (line=='Cadillac') or (line=='Kia') or (line=='Pontiac'):
        return 6
    elif (line=='Ford') or (line=='Lincoln') or (line=='Volvo') or (line
                                                =='Subaru'):
        return 5
    elif (line=='Toyota') or (line=='Mercedes') or (line
       =='Volkswagen') or (line=='Lexus') or (line=='Audi') or (line=='BMW'):
        return 4

country_df = pd.read_csv('country_df.csv')
model_df = pd.read_csv('model_df.csv')
df_vin = pd.read_csv('df_new.csv')

with open('model_LGBM.pkl', 'rb') as file:
  model = pickle.load(file)

def one_vin(kod):
    pattern_new = r'''
       (?P<country>.{2})
       (?P<mini_prod>.{1})
       (?P<number_4>.{1})
       (?P<number_5>.{1})
       (?P<number_6>.{1})
       (?P<number_7>.{1})
       (?P<number_8>.{1})
       (?P<control>.{1})
       (?P<year>.{1})
       (?P<factory_code>.{1})
       (?P<serial_namber>.{6})
      '''
    df= pd.DataFrame.from_dict([(x.groupdict()) \
                        for x in re.compile(pattern_new, re.X).finditer(kod)])
    df['VMI']= df['country']+df['mini_prod']
    country_dict = {}
    for k in range(len(country_df)):
        if df['country'][0] in country_df['cipher'][k]:
            country_dict['country'] = country_df['country'][k]
    s = [*country_dict.values()][0]
    if s in df_vin['country'].unique():
        st.write('Страна производитель: ', s)
        df['country'] = s
    else:
        st.write('Страна производитель: ', s)
        df['country'] = 'United States'
    model_dict = {}
    for k in range(len(model_df)):
        if df['VMI'][0] in model_df['WMI'][k]:
            model_dict['country'] = model_df['marka'][k]
    if len(model_dict)==0:
        s= 'other'
    else:
        s = [*model_dict.values()][0]
    if s in df_vin['model'].unique():
        st.write('Model: ', s)
        df['model'] = s
    else:
        st.write('Model: ', s)
        df['model'] = 'Other'
    year_dict,n  = {},1994
    for i in year:
        year_dict[i] = n
        n+=1
    if year_dict[df['year'][0]]:
        st.write('Год автомобиля:', year_dict[df['year'][0]])
    else:
        st.write('Год автомобиля: other')

    df['type_safety'] = df['model'].apply(safety)
    df['type_engine'] = df['model'].apply(engine)
    df['type_body'] = df['model'].apply(body)
    a = ['type_safety','type_engine', 'type_body']
    for i in a:
        if df[i][0] == 4:
            df[i] = df['number_4']
        elif df[i][0] == 5:
            df[i] = df['number_5']
        elif df[i][0] == 6:
            df[i] = df['number_6']
        elif df[i][0] == 7:
            df[i] = df['number_7']
        elif df[i][0] == 8:
            df[i] = df['number_8']
        else:
            df[i] = 'other'
    df = df.drop(['number_4', 'number_5', 'number_6',
            'control','number_7','number_8', 'serial_namber', 'VMI'], axis=1)
    if (df['mini_prod'][0] not in mini_prod) or (df['year'][0] not in year_log) or (df['factory_code'][0] not in factory_code):
        st.write('Модель не готова пока посчитать стоимость данного автомобиля')
    else:
      pred = model.predict(df)
      st.write('Примерная стоимость автомобиля:', round(*pred))

mini_prod = ['M', 'A', '1', 'R', 'N', '2', 'H', 'F', '4', 'C', '8', 'G', '6', 'Y', 'K', '3', 'T', 'W', 'V', 'P', 'D', 'B', 'J', 'X', 'U', '5', 'L', '7', 'E', 'S', '0', 'Z']
year_log = ['B', 'E', 'C', '3', '7', 'D', 'A', 'Y', '5', '6', '4', '8', '9', 'F', '2', '1', 'X', 'W', 'T', 'V', 'R', 'S', 'P', 'K', 'M', 'J', 'H', 'L', 'N', 'G']
factory_code = ['B', 'R', 'L', 'H', '4', 'U', 'G', 'X', 'Z', 'W', '6', 'A', '0', 'S', '1', 'F', 'N', 'K', 'P', 'E', 'M', 'C', '5', 'D', '3', 'J', '9', '2', '7', 'T', '8', 'Y', 'V']

st.write('Введите VIN код:')

h = st.text_input('VIN')
if len(h)==17:
    st.write('Вы ввели:', h)
    one_vin(h)
else:
    st.write('Введенный код должен содержать 17 символов')